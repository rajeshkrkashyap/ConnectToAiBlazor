@page "/subscriptionType"
@using System.Security.Cryptography
@using System.Text;
@using Services;
@inject AppSettings appSettings
@inject DataService dataService
@inject IJSRuntime JS
@implements IAsyncDisposable

<form action="Success" method="get" name="razorpayForm">
    <input id="razorpay_payment_id" type="hidden" name="razorpay_payment_id" />
    <input id="razorpay_order_id" type="hidden" name="razorpay_order_id" />
    <input id="razorpay_signature" type="hidden" name="razorpay_signature" />
    <input id="orderId" type="hidden" name="orderId" value="@orderViewModel.OrderId" />
    @* <input id="encryptedValue" type="hidden" name="encryptedValue" value="@orderViewModel.EncryptedStr" />
    <input id="tokens" type="hidden" name="tokens" value="@orderViewModel.Tokens" />
    <input id="subscriptionType" type="hidden" name="subscriptionType" value="@orderViewModel.SubscriptionType" /> *@
</form>

<MudButton id="rzp-button1" Style="margin-top:20px;margin-left:20px">Pay with Razorpay</MudButton>

@code {
    OrderViewModel orderViewModel;
    protected override void OnInitialized()
    {
        orderViewModel = dataService.OrderViewModel;
    }

    #region JAVA SCRIPT Library
    private IJSObjectReference? module1;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module1 = await JS.InvokeAsync<IJSObjectReference>("import", "/js/processOrderRazorpay.js");
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module1 is not null)
        {
            //await module1.DisposeAsync();
        }
    }
    #endregion
}

